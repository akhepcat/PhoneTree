-- Schema for the app, using sqlite.  Limited data types, so... limited  validation?
-- 
-- What am I missing?
-- 
-- Data security model:
-- 	INTERNAL - used by the application, never exposed to a user or admin
-- 	ADMIN - data that can only be seen by an admin
-- 	PRIVATE - data exposed only to a user
--	SHARED - data exposed to a user and specified groups
--	PUBLIC - data that can be shared to any user
--	[..]   - for uuids, these are dereferenced to the name of the object
--


-- This is the users table, for authentication purposes, which is separate from the contacts
CREATE TABLE users (
    userid TEXT PRIMARY KEY,	-- INTERNAL: uuid of the user
    created INTEGER,		-- PRIVATE: timestamp of the user creation
    authid TEXT,		-- INTERNAL: uuid reference to the primary authentication data
    privs TEXT,			-- INTERNAL: uuid reference to the user's privileges 
    username TEXT,		-- PRIVATE: the logged in users's name
    emailid UUID		-- [PRIVATE]: uuid reference to the user's email address
);


-- This is the table of all registered and (hopefully) validated email addresses
CREATE TABLE emails (
    emailid TEXT PRIMARY KEY,	-- INTERNAL: uuid of the email account
    timestamp INTEGER,		-- PRIVATE: creation or validation timestamp
    address TEXT,		-- PRIVATE: the logged-in users's registered email
    verified INTEGER		-- PRIVATE: has the user verified this email
);


-- This is the authentication data table
CREATE TABLE authids (
    authid TEXT PRIMARY KEY,	-- INTERNAL: uuid of the authorization data
    timestamp INTEGER,		-- PRIVATE: timestamp of the authid creation or last update
    userid TEXT,		-- INTERNAL: uuid of the associated user who owns this record
    authtype INTEGER,		-- PRIVATE: authentication type: 0=password, 1=TOTP, 2=magic URL,  4= ... 
    authdata TEXT		-- PRIVATE: any time of authentication data: passwords, TOTP data, magic url string, etc
);


-- This is the privileges tables
CREATE TABLE privileges (
    privs TEXT PRIMARY KEY,	-- INTERNAL: uuid of the privilege data
    isadmin INTEGER		-- INTERNAL: is the user an admin of the system
	-- Yes, this needs to be fleshed out- what admin roles, or privilege levels need to be here?
	-- do we need to have separate user privs, group privs, and admin privs?  maybe at some point?
);


-- This is the contacts table.  
CREATE TABLE contacts (
    contact TEXT PRIMARY KEY,	-- INTERNAL: uuid of the contact
    created INTEGER,		-- PRIVATE: timestamp of the contact creation
    nick TEXT,			-- SHARED: nickname for the user
    fname TEXT,			-- SHARED: real first name for the user
    lname TEXT,			-- SHARED: real last name for the user
    location TEXT,		-- SHARED: kind of location identifier
    phone1 TEXT UNIQUE,		-- SHARED: primary phone number for the user
    phone2 TEXT UNIQUE,		-- SHARED: phone number for the user
    notes TEXT			-- PRIVATE: generic notes
);


-- This is a groups table that defines a group of users
CREATE TABLE groups (
    groupid TEXT PRIMARY KEY,	-- INTERNAL: uuid of the group
    created INTEGER,		-- SHARED: timestamp of the group creation
    creator TEXT,		-- SHARED: uuid reference to the contact who created this group
    name TEXT			-- SHARED: name of this group
);


-- This is the memberships table, that defines which users are members of which groups
CREATE TABLE membership (
    groupid TEXT,			-- [SHARED]: uuid reference to a group
    contact TEXT,		-- [SHARED]: uuid reference to a contact
    joindate INTEGER		-- SHARED: timestamp of when the contact was added to the group
);


-- This is the invites table, that defines which users are invited into which groups
CREATE TABLE invites (
    invitee TEXT,		-- [SHARED]: uuid reference to a contact who is being invited
    groupid TEXT,		-- [SHARED]: uuid reference to a group
    inviter TEXT,		-- [SHARED]: uuid reference to a contact who made the invitation
    invited INTEGER		-- SHARED: timestamp of when the contact was invited to the group
);


-- This is the table that defines a check-in campaign
CREATE TABLE campaign (
    campaign TEXT PRIMARY KEY,	-- INTERNAL: uuid of campaign
    created INTEGER,		-- SHARED: timestamp of the campaign creation
    begins INTEGER,		-- SHARED: timestamp of start of campaign
    ends INTEGER,		-- SHARED: timestamp of end of campaign
    name TEXT			-- SHARED: Name for the campaign
);


-- This is the table for checkins
CREATE TABLE checkins (
    campaign TEXT,		-- [SHARED]: uuid reference to a campaign in said table
    contact TEXT,		-- [SHARED]: uuid reference to a person who is checking in
    timestamp INTEGER		-- SHARED: time of check-in
);


-- This is the login table, where we log who's logged in
CREATE TABLE users (
    userid TEXT,		-- INTERNAL: uuid of the user
    sessionid TEXT,		-- INTERNAL: session id for this user's active login, also stored as a cookie
    logints INTEGER,		-- PRIVATE: timestamp of the user login
    active INTEGER		-- PRIVATE: is the user currently active within timeout period?
);
